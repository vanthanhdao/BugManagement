

@model IEnumerable<QuanlyBug.Models.ProjectList>

@*Sữa lại check description
    sữa lại lịch sử hoạt động
    Thêm ghi lại khi tạo xóa thêm vào history
    Thêm coi thành viên trong nhóm và show khi thêm thành viên
    Sữa lại giao diện cho đẹp*@


@{
    QuanlyBug.Models.USERS kh = (QuanlyBug.Models.USERS)Session["TaiKhoan"];

    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
    var projectList = ViewData["ProjectList"] as IEnumerable<QuanlyBug.Models.ProjectList>;
    var historylist = ViewData["dataHistory"] as IEnumerable<QuanlyBug.Models.HistoryList>;
    //var countFunctionhas = ViewData["countFunctionhas"];
    var padingProject = projectList != null ? "0px" : "60px";
    int count = -1;
    string[] listcolorProject = { "#AFEEEE", "#FFA500", "#FF0000", "#00FA9A", "#EE82EE" };
}
@*<script src="~/Assets/dist/js/demo-theme.min.js?1684106062"></script>*@

@*Làm cái deadline Bug*@
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css" integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA==" crossorigin="anonymous" />
<style>

    /* ======= Toast message ======== */

    #toastmess {
        position: fixed;
        top: 32px;
        right: 32px;
        z-index: 999999;
    }

    .toastmess {
        display: flex;
        align-items: center;
        background-color: #fff;
        border-radius: 2px;
        padding: 10px 0;
        min-width: 400px;
        max-width: 450px;
        border-left: 4px solid;
        box-shadow: 0 5px 8px rgba(0, 0, 0, 0.08);
        transition: all linear 0.3s;
    }

    @@keyframes slideInLeft {
        from {
            opacity: 0;
            transform: translateX(calc(100% + 32px));
        }

        to {
            opacity: 1;
            transform: translateX(0);
        }
    }

    @@keyframes fadeOut {
        to {
            opacity: 0;
        }
    }

    .toast--success {
        border-color: #47d864;
    }

        .toast--success .toast__icon {
            color: #47d864;
        }

    .toast--info {
        border-color: #2f86eb;
    }

        .toast--info .toast__icon {
            color: #2f86eb;
        }

    .toast--warning {
        border-color: #ffc021;
    }

        .toast--warning .toast__icon {
            color: #ffc021;
        }

    .toast--error {
        border-color: #ff623d;
    }

        .toast--error .toast__icon {
            color: #ff623d;
        }

    .toastmess + .toastmess {
        margin-top: 24px;
    }

    .toast__icon {
        font-size: 24px;
    }

    .toast__icon,
    .toast__close {
        padding: 0 16px;
    }

    .toast__body {
        flex-grow: 1;
    }

    .toast__title {
        font-size: 16px;
        font-weight: 600;
        color: #333;
    }

    .toast__msg {
        font-size: 14px;
        color: #888;
        margin-top: 6px;
        line-height: 1.5;
    }

    .toast__close {
        font-size: 20px;
        color: rgba(0, 0, 0, 0.3);
        cursor: pointer;
    }
</style>



<div class="page-wrapper">
    <!-- Page header -->
    <div class="page-header d-print-none">
        <div class="container-xl">
            <div class="row g-2 align-items-center">
                <div class="col">
                    <h2 class="page-title">
                        Dự án
                    </h2>
                </div>
            </div>
        </div>
    </div>
    <!-- Page body -->
    <div class="page-body">
        <div class="container-xl">
            <div class="row">
                <div class="col-lg-9">
                    <div class="card overflow-auto" style="height:70vh;">
                        <div class="row row-deck row-cards">
                            @if (projectList.Count() != 0)
                            {
                                foreach (var item in projectList)
                                {
                                    if (count == listcolorProject.Length - 1)
                                    {
                                        count = 0;
                                    }
                                    else
                                    {
                                        count = count + 1;
                                    }
                                    <div class="col-sm-6 col-lg-3 " style="padding-top:20px; padding-left:25px">
                                        <a href="@Url.Action("Index", "BUGs", new { id = item.ProjectID })" class="card" style="border-radius: 8px;border-left-color: @listcolorProject[count]; border-left-width: 15px;">

                                            <div class="card" style="  padding-left: 15px; padding-top: 15px;padding-bottom: 15px;  ">
                                                <font style="vertical-align: inherit; font-weight:bold;font-size:16px"><font style="vertical-align: inherit;font-size:1em">@item.Name</font></font>
                                                <font style="vertical-align: inherit;margin-top:5px "><font style="vertical-align: inherit;font-size:14px">Quản lý dịch vụ</font></font>

                                                <div style="flex-direction: row;margin-top:5px " class="d-flex justify-content-between ">
                                                    <font style="vertical-align: inherit;font-size: 11px;font-style: italic;">Tất cả chức năng</font>

                                                    <font style="vertical-align: inherit;padding-right: 50px;"><font style="vertical-align: inherit;font-size: 11px;font-style: italic;">@item.countFunctions</font></font>
                                                </div>
                                                <div style="flex-direction: row;  " class="d-flex justify-content-between ">
                                                    <font style="vertical-align: inherit;font-size: 11px;font-style: italic;">Chức năng chưa xong</font>

                                                    <font style="vertical-align: inherit;padding-right: 50px;"><font style="vertical-align: inherit;font-size: 11px;font-style: italic;">@item.countFunctionsNew</font></font>
                                                </div>
                                                <div style="flex-direction: row; " class="d-flex justify-content-between ">
                                                    <font style="vertical-align: inherit;font-size: 12px;font-style: italic;">Tất cả lỗi</font>

                                                    <font style="vertical-align: inherit;padding-right: 50px;"><font style="vertical-align: inherit;font-size: 12px;font-style: italic;">@item.countBugs</font></font>
                                                </div>
                                                <div style=" flex-direction: row; " class="d-flex justify-content-between ">
                                                    <font style="vertical-align: inherit;font-size: 12px;font-style: italic;">Lỗi chưa duyệt</font>

                                                    <font style="vertical-align: inherit;padding-right: 50px;"><font style="vertical-align: inherit;font-size: 12px;font-style: italic;">@item.countBugsNew</font></font>
                                                </div>


                                            </div>
                                        </a>

                                    </div>
                                }
                            }
                            else
                            {
                                <div style="display:flex;justify-content:center;align-items:center">
                                    <img src="/Assets/images/noresult1.png" style="width:100px;height:100px" alt="">
                                    <span style="font-size:18px">Không có dự án</span>

                                </div>
                            }
                            <div class="d-flex justify-content-center">
                                <span style=" margin-bottom: 10px; font-size: 20px; font-weight: bold;">Lịch sử hoạt động</span>
                            </div>

                            <div style="margin-bottom: 120px;margin-top:15px">
                                @if (historylist.Count() != 0)
                                {
                                    foreach (var item in historylist)
                                    {

                                        <div style=" margin-bottom:10px;padding-bottom: 10px;">
                                            <div style=" width: 100%; height: 35px; padding-left: 5px; margin: 7px" class="d-flex justify-content-between">
                                                <h4 style="margin-left: 100px; margin-top: 5px;">
                                                    @item.Description_History
                                                    <small class="d-flex justify-content-start" style=" ">
                                                        <span style="font-size: 10px; font-style: italic; margin-right: 7px ">@item.nameUser    </span><span> · </span><span style="font-size: 10px;font-style: italic;margin-left:7px ">  @item.Name_Project</span>
                                                    </small>
                                                </h4>
                                                <span style="margin-right: 100px; margin-top: 10px;">@item.Activity</span>

                                            </div>

                                        </div>
                                    }
                                }
                                else
                                {
                                    <div style="display:flex;justify-content:center;align-items:center;margin-top:7%;margin-left:8%">
                                        <img src="/Assets/images/no-data.png" style="width:50px;height:50px" alt="">
                                        <span style="font-size:18px">Không có lịch sử</span>
                                    </div>
                                }
                                <div class="card" style="display:contents">
                                    <div class="card-body">

                                        <div id="toastmess"></div>

                                    </div>
                                </div>
                            </div>
                        </div>


                    </div>
                </div>
                <div class="col-lg-3">
                    <div class="row row-cards">
                        <div class="col-md-6 col-lg-12">
                            @if (projectList.Count() != 0)
                            {
                                var countFunctions = 0;
                                var countFunctionsNew = 0;
                                var countBugs = 0;
                                var countBugsNew = 0;
                                var countProject = 0;
                                foreach (var item in projectList)
                                {
                                    countFunctions += item.countFunctions;
                                    countFunctionsNew += item.countFunctionsNew;
                                    countBugs += item.countBugs;
                                    countBugsNew += item.countBugsNew;

                                }
                                countProject = projectList.Count();
                                <div class="card" style="display: flex; justify-content: space-between; padding-left: 15%; padding-right: 15%; padding-bottom: 10%;; margin-bottom: 10%; border-width: initial">
                                    <span style="margin-bottom: 10%;margin-top:5%; font-size: 20px; font-weight: bold;align-self:center ">Thống kê</span>

                                    <div style="
                              flex-direction: row; " class="d-flex justify-content-between ">
                                        <font style="vertical-align: inherit;font-size: 12px;font-weight:bold;">Tất cả dự án</font>

                                        <font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 12px;font-style: italic;">@countProject</font></font>
                                    </div>
                                    <div style="
                                  flex-direction: row; " class="d-flex justify-content-between ">
                                        <font style="vertical-align: inherit; font-size: 11px; font-weight: bold;">Tất cả chức năng</font>

                                        <font style="vertical-align: inherit; "><font style="vertical-align: inherit;font-size: 11px;font-style: italic;">@countFunctions</font></font>
                                    </div>
                                    <div style="
                              flex-direction: row;  " class="d-flex justify-content-between ">
                                        <font style="vertical-align: inherit; font-size: 11px; font-weight: bold;">Chức năng chưa xong</font>

                                        <font style="vertical-align: inherit; "><font style="vertical-align: inherit;font-size: 11px;font-style: italic;">@countFunctionsNew</font></font>
                                    </div>
                                    <div style="
                              flex-direction: row; " class="d-flex justify-content-between ">
                                        <font style="vertical-align: inherit; font-size: 12px; font-weight: bold;">Tất cả lỗi</font>

                                        <font style="vertical-align: inherit; "><font style="vertical-align: inherit;font-size: 12px;font-style: italic;">@countBugs</font></font>
                                    </div>
                                    <div style="
                              flex-direction: row; " class="d-flex justify-content-between ">
                                        <font style="vertical-align: inherit; font-size: 12px; font-weight: bold;">Lỗi chưa duyệt</font>

                                        <font style="vertical-align: inherit;"><font style="vertical-align: inherit;font-size: 12px;font-style: italic;">@countBugsNew</font></font>
                                    </div>

                                </div>
                            }

                        </div>
                        <div class="col-md-6 col-lg-12">
                            <div class="card" style="height:auto;padding:5%;border-width:initial">
                                <span style="margin-bottom: 10px; font-size: 20px; font-weight: bold;  display: flex; align-content: flex-start; justify-content: center; ">Sự kiện sắp diễn ra</span>
                                <div style="background-color: grey; width: 100%; height: 1px; margin-bottom: 10px"></div>
                                <table>
                                    <thead>
                                        <tr style="display:flex;flex-direction: row;align-content: space-between;n;align-items: center;">
                                            <th style="width:70%">Tên lỗi - Dự án</th>
                                            <th style="width:30%">Thời hạn</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model.Count() != 0)
                                        {
                                            foreach (var item in Model)
                                            {
                                                if (item.TitleBug != null)
                                                {
                                                    string deadline = item.deadline;
                                                    string now = DateTime.Now.ToString("yyyy-MM-dd HH:mm");
                                                    DateTime date1 = DateTime.ParseExact(deadline, "yyyy-MM-dd HH:mm", null);
                                                    DateTime date2 = DateTime.ParseExact(now, "yyyy-MM-dd HH:mm", null);

                                                    // Tính toán chênh lệch giữa hai ngày
                                                    TimeSpan difference = date1 - date2;
                                                    if (difference.TotalMinutes <= 0)
                                                    {
                                                        <tr style="padding: 2px; margin-bottom: 5px; display: flex; flex-direction: row; align-content: space-between; justify-content: space-between; align-items: center;">

                                                            <td style="width:70%">
                                                                <a style="color: red" href="@Url.Action("Index", "BUGs", new { id = item.ProjectID })">@item.TitleBug <small style="font-size:13px;font-style:italic">(Hết thời gian)</small> <br /><small style="font-size:11px;font-style:italic">(@item.Title - @item.Name)</small></a>
                                                            </td>
                                                            <td style="width: 30%; color: red">@item.deadline</td>
                                                        </tr>
                                                    }
                                                    else
                                                                 if (difference.TotalMinutes <= 2160)
                                                    {
                                                        <tr style="padding:2px;margin-bottom:5px;display: flex; flex-direction: row; align-content: space-between; justify-content: space-between; align-items: center;">

                                                            <td style="width:70%">
                                                                <a style="color:red" href="@Url.Action("Index", "BUGs", new { id = item.ProjectID })">@item.TitleBug <br /><small style="font-size:11px;font-style:italic">(@item.Title - @item.Name)</small></a>
                                                            </td>
                                                            <td style="width: 30%; color: red ">@item.deadline</td>
                                                        </tr>
                                                    }
                                                    else
                                                    {
                                                        <tr style="padding: 2px; margin-bottom: 5px; display: flex; flex-direction: row; align-content: space-between; justify-content: space-between; align-items: center;">

                                                            <td style="width:70%">
                                                                <a style="color:black" href="@Url.Action("Index", "BUGs", new { id = item.ProjectID })">@item.TitleBug  <br /><small style="font-size:11px;font-style:italic">(@item.Title - @item.Name)</small></a>
                                                            </td>
                                                            <td style="width:30%">@item.deadline</td>
                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                        else
                                        {
                                            <tr style="display:flex;justify-content:center;align-items:center;margin-top:7%">
                                                <td>
                                                    <img src="/Assets/images/empty.png" style="width:45px;height:45px" alt="">
                                                    <span style="font-size:18px">Không có sự kiện nào</span>
                                                </td>
                                            </tr>
                                        }
                                        Thêm các dòng khác tùy theo nhu cầu
                                    </tbody>
                                </table>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

</div>



<script>

    (() => {
        'use strict';

        const form = document.querySelector('.author');
        const formAddMember = document.querySelector('.addmember');
        const formCreateBug = document.querySelector('.createbug');
        var email = document.getElementById('email');

        form.addEventListener('submit', event => {
            event.preventDefault();
            event.stopPropagation();

            $.ajax({
                url: '/Home/GetData',
                type: 'GET',
                success: function (data) {
                    console.log('Data:', data);
                    var projects = data;
                    var inputEmailAuthor = document.getElementById("email");

                    // Mỗi lần submit, reset custom validity
                    inputEmailAuthor.setCustomValidity('');

                    projects.forEach(function (project) {
                        if (project.Email == email.value && project.Status != null) {
                            inputEmailAuthor.setCustomValidity("This field is invalid");
                        }
                    });

                    if (form.checkValidity()) {
                        const dataToSend = {
                            email: document.getElementById('email').value,
                            role: document.getElementById('role').value,
                        };

                        $.ajax({
                            type: "POST",
                            url: "/Home/Authorization",
                            data: dataToSend,
                            success: function (response) {
                                // Xử lý kết quả từ controller (nếu cần)
                                console.log(response);
                            },
                            error: function (error) {
                                // Xử lý lỗi nếu có
                                console.error(error);
                            }
                        });

                        toast({
                            title: "Thành công!",
                            message: `Chúng tôi đã gửi tới email ${dataToSend.email} để xác nhận.`,
                            type: "success",
                            duration: 5000
                        });
                        setTimeout(function () {
                            // Load lại trang sau khi đã chờ 5 giây
                            location.reload();
                        }, 2000);
                    } else {
                        toast({
                            title: "Thất bại!",
                            message: `Email ${email.value} đã được xác nhận.`,
                            type: "error",
                            duration: 5000
                        });
                    }

                },
                error: function (error) {
                    console.log('Error:', error);
                }
            });

            form.classList.add('was-validated');
        }, false);

        formAddMember.addEventListener('submit', event => {

            event.preventDefault();
            event.stopPropagation();
            var inputNameOrEmail = document.getElementById("nameOrEmail");
            var inputNameProject = document.getElementById("nameProject");

            $.ajax({
                url: '/Home/GetDataProjectList',
                type: 'GET',
                success: function (data) {
                    const checkNameOrEmail = inputNameOrEmail.value != "" ? data.some(element => element.Email === inputNameOrEmail.value) : null;
                    const checkProjectMember = inputNameOrEmail.value != "" ? data.some(element => element.Email === inputNameOrEmail.value && element.Name === inputNameProject.value) : null;
                    console.log(checkNameOrEmail, checkProjectMember)
                    /* inputNameOrEmail.setCustomValidity('');*/
                    if (checkNameOrEmail) {
                        inputNameOrEmail.setCustomValidity('');
                    } else {
                        inputNameOrEmail.setCustomValidity("This field is invalid");
                    }

                    if (!checkProjectMember) {
                        inputNameOrEmail.setCustomValidity('');
                    } else {
                        inputNameOrEmail.setCustomValidity("This field is invalid");
                    }

                    if (formAddMember.checkValidity()) {
                        const dataToSend = {
                            email: inputNameOrEmail.value,
                            nameProject: inputNameProject.value,
                        };

                        $.ajax({
                            type: "POST",
                            url: "/Home/AuthorizationAddMember",
                            data: dataToSend,
                            success: function (response) {
                                // Xử lý kết quả từ controller (nếu cần)
                                console.log(response);
                            },
                            error: function (error) {
                                // Xử lý lỗi nếu có
                                console.error(error);
                            }
                        });

                        toast({
                            title: "Thành công!",
                            message: `Chúng tôi đã gửi tới email ${inputNameOrEmail.value} để xác nhận.`,
                            type: "success",
                            duration: 5000
                        });

                        //setTimeout(function () {
                        //    // Load lại trang sau khi đã chờ 5 giây
                        //    location.reload();
                        //}, 2000);
                    } else {
                        if (checkNameOrEmail == false) {
                            toast({
                                title: "Thất bại!",
                                message: `Email ${inputNameOrEmail.value} chưa được cấp quyền sử dụng.`,
                                type: "error",
                                duration: 5000
                            });
                        } else if (checkProjectMember == true) {
                            toast({
                                title: "Thất bại!",
                                message: `Email ${inputNameOrEmail.value} đã tham gia dự án.`,
                                type: "error",
                                duration: 5000
                            });
                        } else {
                            toast({
                                title: "Thất bại!",
                                message: `Email không được để trống.`,
                                type: "error",
                                duration: 5000
                            });
                        }
                    }

                },
                error: function (error) {
                    console.log('Error:', error);
                }
            });
            formAddMember.classList.add('was-validated');
        }, false);
    })();


    function toast({ title = "", message = "", type = "info", duration = 3000 }) {
        console.log(title)
        const main = document.getElementById("toastmess");
        if (main) {
            const toast = document.createElement("div");

            // Auto remove toast
            const autoRemoveId = setTimeout(function () {
                main.removeChild(toast);
            }, duration + 1000);

            // Remove toast when clicked
            toast.onclick = function (e) {
                if (e.target.closest(".toast__close")) {
                    main.removeChild(toast);
                    clearTimeout(autoRemoveId);
                }
            };

            const icons = {
                success: "fas fa-check-circle",
                info: "fas fa-info-circle",
                warning: "fas fa-exclamation-circle",
                error: "fas fa-exclamation-circle"
            };
            const icon = icons[type];
            const delay = (duration / 1000).toFixed(2);

            toast.classList.add("toastmess", `toast--${type}`);
            toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;

            toast.innerHTML = `
                                                            <div class="toast__icon">
                                                                <i class="${icon}"></i>
                                                            </div>
                                                            <div class="toast__body">
                                                                <h3 class="toast__title">${title}</h3>
                                                                <p class="toast__msg">${message}</p>
                                                            </div>
                                                            <div class="toast__close">
                                                                <i class="fas fa-times"></i>
</div>
                                                        `;
            main.appendChild(toast);
        }
    }


    function validateEmail(email) {
        const re = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
        return re.test(String(email).toLowerCase());
    }



</script>